{"ast":null,"code":"import _defineProperty from \"/Users/parkkyungsuk/Documents/GitHub/react-course/redux-counter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport number from \"./number\";\nimport color from \"./color\";\n\nfunction counter(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.INCREMENT:\n      return _objectSpread({}, state, {\n        //既存stateと\n        number: state.number + 1 //変更したい要素を追加\n\n      });\n\n    case types.DECREMENT:\n      return _objectSpread({}, state, {\n        number: state.number - 1\n      });\n\n    case types.SET_COLOR:\n      return _objectSpread({}, state, {\n        color: action.color\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default counter;","map":{"version":3,"sources":["/Users/parkkyungsuk/Documents/GitHub/react-course/redux-counter/src/reducers/reducers.js"],"names":["number","color","counter","state","INITIAL_STATE","action","type","types","INCREMENT","DECREMENT","SET_COLOR"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGC,aAAzB,EAAwCC,MAAxC,EAAgD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,KAAK,CAACC,SAAX;AACE,+BACKL,KADL;AACY;AACVH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,GAAe,CAFzB,CAE2B;;AAF3B;;AAIF,SAAKO,KAAK,CAACE,SAAX;AACE,+BACKN,KADL;AAEEH,QAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,GAAe;AAFzB;;AAIF,SAAKO,KAAK,CAACG,SAAX;AACE,+BACKP,KADL;AAEEF,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFhB;;AAIF;AACE,aAAOE,KAAP;AAjBJ;AAmBD;;AAED,eAAeD,OAAf","sourcesContent":["import number from \"./number\";\nimport color from \"./color\";\n\nfunction counter(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.INCREMENT:\n      return {\n        ...state, //既存stateと\n        number: state.number + 1 //変更したい要素を追加\n      };\n    case types.DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1\n      };\n    case types.SET_COLOR:\n      return {\n        ...state,\n        color: action.color\n      };\n    default:\n      return state;\n  }\n}\n\nexport default counter;\n"]},"metadata":{},"sourceType":"module"}