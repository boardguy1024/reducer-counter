{"ast":null,"code":"import CounterList from \"../components/CounterList\";\nimport * as actions from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { getRandomColor } from \"../utils\";\n\nconst mapStateToProps = state => ({\n  counters: state.counters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: index => dispatch(actions.increment(index)),\n  onDecrement: index => dispatch(actions.decrement(index)),\n  onSetColor: index => {\n    const color = getRandomColor();\n    dispatch(actions.setColor(color));\n  }\n});\n\nconst CounterListContainer = connect(mapStateToProps, mapDispatchToProps)(CounterList);\nexport default CounterListContainer;","map":{"version":3,"sources":["/Users/parkkyungsuk/Documents/GitHub/react-course/redux-counter/src/containers/CounterListContainer.js"],"names":["CounterList","actions","connect","getRandomColor","mapStateToProps","state","counters","mapDispatchToProps","dispatch","onIncrement","index","increment","onDecrement","decrement","onSetColor","color","setColor","CounterListContainer"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,QAAQ,EAAED,KAAK,CAACC;AADgB,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,WAAW,EAAEC,KAAK,IAAIF,QAAQ,CAACP,OAAO,CAACU,SAAR,CAAkBD,KAAlB,CAAD,CADQ;AAEtCE,EAAAA,WAAW,EAAEF,KAAK,IAAIF,QAAQ,CAACP,OAAO,CAACY,SAAR,CAAkBH,KAAlB,CAAD,CAFQ;AAGtCI,EAAAA,UAAU,EAAEJ,KAAK,IAAI;AACnB,UAAMK,KAAK,GAAGZ,cAAc,EAA5B;AACAK,IAAAA,QAAQ,CAACP,OAAO,CAACe,QAAR,CAAiBD,KAAjB,CAAD,CAAR;AACD;AANqC,CAAL,CAAnC;;AASA,MAAME,oBAAoB,GAAGf,OAAO,CAClCE,eADkC,EAElCG,kBAFkC,CAAP,CAG3BP,WAH2B,CAA7B;AAKA,eAAeiB,oBAAf","sourcesContent":["import CounterList from \"../components/CounterList\";\nimport * as actions from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { getRandomColor } from \"../utils\";\n\nconst mapStateToProps = state => ({\n  counters: state.counters\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: index => dispatch(actions.increment(index)),\n  onDecrement: index => dispatch(actions.decrement(index)),\n  onSetColor: index => {\n    const color = getRandomColor();\n    dispatch(actions.setColor(color));\n  }\n});\n\nconst CounterListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CounterList);\n\nexport default CounterListContainer;\n"]},"metadata":{},"sourceType":"module"}