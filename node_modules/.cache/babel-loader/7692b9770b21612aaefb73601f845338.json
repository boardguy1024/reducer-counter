{"ast":null,"code":"var _jsxFileName = \"/Users/parkkyungsuk/Documents/GitHub/react-course/redux-counter/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport Buttons from \"../components/Buttons\";\nimport CounterListContainer from \"./CounterListContainer\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\nimport { getRandomColor } from \"../utils\";\n\nclass App extends Component {\n  render() {\n    const _this$props = this.props,\n          onCreate = _this$props.onCreate,\n          onRemove = _this$props.onRemove;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Buttons, {\n      onCreate: onCreate,\n      onRemove: onRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(CounterListContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapToDispatch = dispatch => ({\n  onCreate: () => dispatch(actions.create(getRandomColor())),\n  onRemove: index => dispatch(actions.remove(index))\n});\n\nexport default connect(null, mapToDispatch)(App);","map":{"version":3,"sources":["/Users/parkkyungsuk/Documents/GitHub/react-course/redux-counter/src/containers/App.js"],"names":["React","Component","Buttons","CounterListContainer","connect","actions","getRandomColor","App","render","props","onCreate","onRemove","mapToDispatch","dispatch","create","index","remove"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,QADX,eACWA,QADX;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAED,QAAnB;AAA6B,MAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AATyB;;AAY5B,MAAMC,aAAa,GAAGC,QAAQ,KAAK;AACjCH,EAAAA,QAAQ,EAAE,MAAMG,QAAQ,CAACR,OAAO,CAACS,MAAR,CAAeR,cAAc,EAA7B,CAAD,CADS;AAEjCK,EAAAA,QAAQ,EAAEI,KAAK,IAAIF,QAAQ,CAACR,OAAO,CAACW,MAAR,CAAeD,KAAf,CAAD;AAFM,CAAL,CAA9B;;AAKA,eAAeX,OAAO,CACpB,IADoB,EAEpBQ,aAFoB,CAAP,CAGbL,GAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Buttons from \"../components/Buttons\";\nimport CounterListContainer from \"./CounterListContainer\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\n\nimport { getRandomColor } from \"../utils\";\n\nclass App extends Component {\n  render() {\n    const { onCreate, onRemove } = this.props;\n    return (\n      <div className=\"App\">\n        <Buttons onCreate={onCreate} onRemove={onRemove} />\n        <CounterListContainer />\n      </div>\n    );\n  }\n}\n\nconst mapToDispatch = dispatch => ({\n  onCreate: () => dispatch(actions.create(getRandomColor())),\n  onRemove: index => dispatch(actions.remove(index))\n});\n\nexport default connect(\n  null,\n  mapToDispatch\n)(App);\n"]},"metadata":{},"sourceType":"module"}